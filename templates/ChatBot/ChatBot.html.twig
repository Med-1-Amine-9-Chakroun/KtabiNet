{% extends "./clientbase.html.twig" %}
{% block body %}
       

<style>


</style>





    <div class='dashboard'>
        <div class="dashboard-nav">
            <header>
                <a href="#!" class="menu-toggle">
                    <i class="fas fa-bars"></i>
                </a>
                <a href="#" class="brand-logo">
               
                    <span>CHAT</span>
                </a>
            </header>
            <nav class="dashboard-nav-list">
                <a href="#" class="dashboard-nav-item">
                    Home </a>
                    
              
            </nav>
        </div>
        <div class='dashboard-app'>
            <header class='dashboard-toolbar'><a href="#!" class="menu-toggle"><i class="fas fa-bars"></i></a></header>
            <div class='dashboard-content'>
                
              
                        <div class="chat-history" id="chat-history">
                            <div class="message received">
                                <div class="message-content">
                                    <p>User Secondaire: Salut, comment ça va ?</p>
                                </div>
                            </div>
                            <div class="message sent">
                                <div class="message-content">
                                    <p>User Principal: Bonjour ! Je vais bien, merci.</p>
                                </div>
                            </div>
                            <div class="message received">
                                <div class="message-content">
                                    <p>User Secondaire: Salut, comment ça va ?</p>
                                </div>
                            </div>
                            <div class="message sent">
                                <div class="message-content">
                                    <p>User Principal: Bonjour ! Je vais bien, merci.</p>
                                </div>
                            </div>
                            <div class="message received">
                                <div class="message-content">
                                    <p>User Secondaire: Salut, comment ça va ?</p>
                                </div>
                            </div>
                            <div class="message sent">
                                <div class="message-content">
                                    <p>User Principal: Bonjour ! Je vais bien, merci.</p>
                                </div>
                            </div>
                            <div class="message received">
                                <div class="message-content">
                                    <p>User Secondaire: Salut, comment ça va ?</p>
                                </div>
                            </div>
                            <div class="message sent">
                                <div class="message-content">
                                    <p>User Principal: Bonjour ! Je vais bien, merci.</p>
                                </div>
                            </div>
                            <div class="message received">
                                <div class="message-content">
                                    <p>User Secondaire: Salut, comment ça va ?</p>
                                </div>
                            </div>
                            <div class="message sent">
                                <div class="message-content">
                                    <p>User Principal: Bonjour ! Je vais bien, merci.</p>
                                </div>
                            </div>
                            <!-- Other messages can be added here -->
                        </div>
                        <div class="chat-input">
                            <input type="text" placeholder="Type your message...">
                            <button>Send</button>
                            <button id="startButton">Démarrer la reconnaissance vocale</button>
                        </div>
                        

<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script>

    // Vérifier si l'API de reconnaissance vocale est prise en charge par le navigateur
    if ('SpeechRecognition' in window || 'webkitSpeechRecognition' in window) {
        // Créer un objet de reconnaissance vocale
        var recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();

        // Définir la langue de reconnaissance vocale
        recognition.lang = 'fr-FR';

        // Définir le mode de reconnaissance continue
        recognition.continuous = true;

        // Tableau pour stocker les valeurs
        var values = [];

        // Événement déclenché lorsqu'un résultat vocal est détecté
        recognition.onresult = function(event) {
            var transcriptions = Array.from(event.results)
                .map(result => result[0].transcript.toLowerCase());

            console.log('Résultats de la reconnaissance vocale :', transcriptions);
            

            // Ajouter les nouvelles valeurs au tableau
            values = values.concat(transcriptions);
	
			processUserRequest(transcriptions);

       
        };

        // Événement déclenché lorsqu'il y a une erreur dans la reconnaissance vocale
        recognition.onerror = function(event) {
            console.error('Erreur de reconnaissance vocale :', event.error);
        };

        // Associer l'événement de démarrage de la reconnaissance vocale au bouton
        document.getElementById('startButton').addEventListener('click', function() {
            // Démarrer la reconnaissance vocale
            recognition.start();
        });
		 // Fonction pour traiter la demande de l'utilisateur
        function processUserRequest(request) {
            // Environnement fictif - utilisez une vraie bibliothèque ou API de NLP dans un environnement de production
            var response = fakeNlpProcessing(request);
            console.log(response);
            CreateMessage(request[request.length-1]);
          
        }

       
       
        /*******************************/
        /*******************************/
        /*******************************/
        /*******************************/
        /*******************************/
        

// Fonction pour obtenir les synonymes d'un mot
function getSynonyms(word) {
    console.log(axios.get(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`));
    return axios.get(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`);       
}

// Fonction pour obtenir les antonymes d'un mot
function getAntonyms(word) {
    return axios.get(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`);
        
}

// Fonction fictive pour le traitement du langage naturel
function fakeNlpProcessing(request, res) {
    console.log(request);
    let message = request[request.length-1];
    if (message.includes('synonyme')) {
        const word = message.replace('synonyme de', '').trim();
        return getSynonyms(word);

    } else if (message.includes('antonyme')) {
        const word = message.replace('antonyme de', '').trim();
        return getAntonyms(word); 

    } else {
        return { response: 'Désolé, je ne comprends pas votre demande.' };
    }
}

        /*******************************/
        /*******************************/
        /*******************************/
        /*******************************/
        /*******************************/
        
        function CreateMessage(request){
            // Création de l'élément <p> avec le texte

            const pElement = document.createElement('p');
            pElement.textContent = request;


            // Création de l'élément <div> avec la classe "message-content" et ajout de l'élément <p> à l'intérieur
            const messageContentDiv = document.createElement('div');
            messageContentDiv.classList.add("message");
            messageContentDiv.classList.add("sent");
            messageContentDiv.appendChild(pElement);
 
            // Sélection de la div avec la classe "message received" et ajout de l'élément <div> construit à l'intérieur
            const receivedMessageDiv = document.getElementById('chat-history');
             console.log(receivedMessageDiv);
            receivedMessageDiv.appendChild(messageContentDiv);

     
}


    } else {
        alert("L'API de reconnaissance vocale n'est pas prise en charge par votre navigateur.");
    }
</script>


                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}